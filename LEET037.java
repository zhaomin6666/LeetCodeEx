package com.zm.LeetCodeEx;

import com.alibaba.fastjson.JSON;

/**
 * 编写一个程序，通过已填充的空格来解决数独问题。
 * 
 * 一个数独的解法需遵循如下规则：
 * 
 * 数字 1-9 在每一行只能出现一次。 数字 1-9 在每一列只能出现一次。 数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。
 * 空白格用 '.' 表示。 [</br>
 * ["5","3",".",".","7",".",".",".","."],</br>
 * ["6",".",".","1","9","5",".",".","."],</br>
 * [".","9","8",".",".",".",".","6","."],</br>
 * ["8",".",".",".","6",".",".",".","3"],</br>
 * ["4",".",".","8",".","3",".",".","1"],</br>
 * ["7",".",".",".","2",".",".",".","6"],</br>
 * [".","6",".",".",".",".","2","8","."],</br>
 * [".",".",".","4","1","9",".",".","5"],</br>
 * [".",".",".",".","8",".",".","7","9"]</br>
 * ]
 * 
 * 一个数独。
 * 
 * [</br>
 * ["5","3","4","6","7","8","9","1","2"],</br>
 * ["6","7","2","1","9","5","3","4","8"],</br>
 * ["1","9","8","3","4","2","5","6","7"],</br>
 * ["8","5","9","7","6","1","4","2","3"],</br>
 * ["4","2","6","8","5","3","7","9","1"],</br>
 * ["7","1","3","9","2","4","8","5","6"],</br>
 * ["9","6","1","5","3","7","2","8","4"],</br>
 * ["2","8","7","4","1","9","6","3","5"],</br>
 * ["3","4","5","2","8","6","1","7","9"]</br>
 * ]
 * 
 * 
 * Note: 给定的数独序列只包含数字 1-9 和字符 '.' 。 你可以假设给定的数独只有唯一解。 给定数独永远是 9x9 形式的。
 * 
 * @author zm
 */
public class LEET037 {
	public static void main(String[] args) {
		LEET037 l037 = new LEET037();
		char[][] board1 = { { '5', '3', '.', '.', '7', '.', '.', '.', '.' },
				{ '6', '.', '.', '1', '9', '5', '.', '.', '.' }, { '.', '9', '8', '.', '.', '.', '.', '6', '.' },
				{ '8', '.', '.', '.', '6', '.', '.', '.', '3' }, { '4', '.', '.', '8', '.', '3', '.', '.', '1' },
				{ '7', '.', '.', '.', '2', '.', '.', '.', '6' }, { '.', '6', '.', '.', '.', '.', '2', '8', '.' },
				{ '.', '.', '.', '4', '1', '9', '.', '.', '5' }, { '.', '.', '.', '.', '8', '.', '.', '7', '9' } };
		l037.solveSudoku(board1);
		System.out.println(JSON.toJSONString(board1));
	}

	private boolean isSolved = false;
	
	public void solveSudoku(char[][] board) {
		
	}
}
